/*Copyright (c) 2019-2020 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.customer_issues.tempdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Test generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`test`")
public class Test implements Serializable {

    private Integer id;
    private Boolean val1;
    private String val2;
    private Date val3;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`val1`", nullable = true)
    public Boolean getVal1() {
        return this.val1;
    }

    public void setVal1(Boolean val1) {
        this.val1 = val1;
    }

    @Column(name = "`val2`", nullable = true, length = 255)
    public String getVal2() {
        return this.val2;
    }

    public void setVal2(String val2) {
        this.val2 = val2;
    }

    @Column(name = "`val3`", nullable = true)
    public Date getVal3() {
        return this.val3;
    }

    public void setVal3(Date val3) {
        this.val3 = val3;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Test)) return false;
        final Test test = (Test) o;
        return Objects.equals(getId(), test.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}