/*Copyright (c) 2019-2020 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.customer_issues.tempdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Temp2 generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`temp2`")
public class Temp2 implements Serializable {

    private Integer id;
    private String val3;
    private Integer temp1id;
    private Integer temp3id;
    private Temp1 temp1;
    private Temp3 temp3;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`val3`", nullable = true, length = 255)
    public String getVal3() {
        return this.val3;
    }

    public void setVal3(String val3) {
        this.val3 = val3;
    }

    @Column(name = "`temp1id`", nullable = true, scale = 0, precision = 10)
    public Integer getTemp1id() {
        return this.temp1id;
    }

    public void setTemp1id(Integer temp1id) {
        this.temp1id = temp1id;
    }

    @Column(name = "`temp3id`", nullable = true, scale = 0, precision = 10)
    public Integer getTemp3id() {
        return this.temp3id;
    }

    public void setTemp3id(Integer temp3id) {
        this.temp3id = temp3id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`temp1id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_temp2_TO_temp1_temp1id_id`"))
    @Fetch(FetchMode.JOIN)
    public Temp1 getTemp1() {
        return this.temp1;
    }

    public void setTemp1(Temp1 temp1) {
        if(temp1 != null) {
            this.temp1id = temp1.getId();
        }

        this.temp1 = temp1;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`temp3id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_temp2_TO_temp3_temp3id_id`"))
    @Fetch(FetchMode.JOIN)
    public Temp3 getTemp3() {
        return this.temp3;
    }

    public void setTemp3(Temp3 temp3) {
        if(temp3 != null) {
            this.temp3id = temp3.getId();
        }

        this.temp3 = temp3;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Temp2)) return false;
        final Temp2 temp2 = (Temp2) o;
        return Objects.equals(getId(), temp2.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}